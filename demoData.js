// ====================================
// –î–ï–ú–û –î–ê–ù–ù–´–ï
// src/constants/demoData.js
// ====================================

// –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ID –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
const generateSimpleId = () => {
  return Date.now().toString(36) + Math.random().toString(36).substr(2);
};

// === –ì–ï–ù–ï–†–ê–¢–û–† –†–ï–ê–õ–ò–°–¢–ò–ß–ù–´–• –í–´–ü–û–õ–ù–ï–ù–ò–ô –î–õ–Ø –ë–£–õ–ï–í–´–• –ü–†–ò–í–´–ß–ï–ö ===
export const generateRealisticCompletions = (days = 30, successRate = 0.8) => {
  try {
    const completions = {};
    const today = new Date();
    
    for (let i = 0; i < days; i++) {
      const date = new Date(today - i * 24 * 60 * 60 * 1000).toISOString().split('T')[0];
      
      // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –Ω–∞—á–∞–ª–µ –Ω–µ–¥–µ–ª–∏
      const dayOfWeek = new Date(date).getDay();
      let adjustedSuccessRate = successRate;
     
      if (dayOfWeek === 1 || dayOfWeek === 2) { // –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, –≤—Ç–æ—Ä–Ω–∏–∫
        adjustedSuccessRate *= 1.1;
      } else if (dayOfWeek === 0 || dayOfWeek === 6) { // –í—ã—Ö–æ–¥–Ω—ã–µ
        adjustedSuccessRate *= 0.8;
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à–∏–µ "–ø—Ä–æ–≤–∞–ª—ã" –∫–∞–∂–¥—ã–µ 7-10 –¥–Ω–µ–π –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏
      if (i > 0 && i % 8 === 0) {
        adjustedSuccessRate *= 0.3;
      }
      
      if (Math.random() < adjustedSuccessRate) {
        completions[date] = true;
      }
    }
    
    return completions;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–π:', error);
    return {};
  }
};

// === –ì–ï–ù–ï–†–ê–¢–û–† –ö–û–õ–ò–ß–ï–°–¢–í–ï–ù–ù–´–• –í–´–ü–û–õ–ù–ï–ù–ò–ô ===
export const generateQuantitativeCompletions = (days = 30, targetValue = 10, successRate = 0.75, variability = 0.3) => {
  try {
    const completions = {};
    const today = new Date();
    
    for (let i = 0; i < days; i++) {
      const date = new Date(today - i * 24 * 60 * 60 * 1000).toISOString().split('T')[0];
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±–∞–∑–æ–≤—É—é –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
      const dayOfWeek = new Date(date).getDay();
      let activityRate = successRate;
      
      if (dayOfWeek === 1 || dayOfWeek === 2) { // –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, –≤—Ç–æ—Ä–Ω–∏–∫
        activityRate *= 1.15;
      } else if (dayOfWeek === 0 || dayOfWeek === 6) { // –í—ã—Ö–æ–¥–Ω—ã–µ
        activityRate *= 0.85;
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º "–ø–ª–æ—Ö–∏–µ" –¥–Ω–∏
      if (i > 0 && i % 9 === 0) {
        activityRate *= 0.2;
      }
      
      // –†–µ—à–∞–µ–º, –±—ã–ª–∞ –ª–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ —ç—Ç–æ—Ç –¥–µ–Ω—å
      if (Math.random() < activityRate) {
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å –≤–∞—Ä–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å—é
        const variation = (Math.random() - 0.5) * 2 * variability;
        let value = Math.round(targetValue * (1 + variation));
        
        // –ò–Ω–æ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–µ–º "–æ—Ç–ª–∏—á–Ω—ã–µ" –¥–Ω–∏ —Å –ø–µ—Ä–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º
        if (Math.random() < 0.1) {
          value = Math.round(targetValue * (1.5 + Math.random() * 0.5));
        }
        
        // –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ = 1
        value = Math.max(1, value);
        
        // –ü—Ä–æ—Å—Ç–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        const hours = Math.floor(Math.random() * 14) + 9;
        const minutes = Math.floor(Math.random() * 60);
        
        completions[date] = {
          value: value,
          targetValue: targetValue,
          unit: 'times',
          completed: value >= targetValue,
          isGoalMet: value >= targetValue,
          completedAt: `${date}T${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:00.000Z`
        };
      }
    }
    
    return completions;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–π:', error);
    return {};
  }
};

// === –î–ï–ú–û-–ü–†–ò–í–´–ß–ö–ò ===
export const DEMO_HABITS = [
  // === 1 –ë–£–õ–ï–í–ê–Ø –ü–†–ò–í–´–ß–ö–ê ===
  {
    id: 'demo_water',
    name: "–í—ã–ø–∏—Ç—å —Å—Ç–∞–∫–∞–Ω –≤–æ–¥—ã —É—Ç—Ä–æ–º",
    description: "–ù–∞—á–∞—Ç—å –¥–µ–Ω—å —Å –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏–∏ –æ—Ä–≥–∞–Ω–∏–∑–º–∞",
    icon: "üíß",
    color: "#2196F3",
    category: "health",
    type: "boolean",
    targetDaysPerWeek: 7,
    reminderTime: "07:30",
    createdAt: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),
    completions: generateRealisticCompletions(30, 0.9),
    archived: false
  },

  // === 1 –ö–û–õ–ò–ß–ï–°–¢–í–ï–ù–ù–ê–Ø –ü–†–ò–í–´–ß–ö–ê (–æ—Ç–∂–∏–º–∞–Ω–∏—è) ===
  {
    id: 'demo_pushups',
    name: "–û—Ç–∂–∏–º–∞–Ω–∏—è",
    description: "–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –æ—Ç–∂–∏–º–∞–Ω–∏—è –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —Ñ–æ—Ä–º—ã",
    icon: "üí™",
    color: "#FF5722",
    category: "fitness",
    type: "number",
    targetValue: 20,
    unit: "times",
    allowOverachievement: true,
    targetDaysPerWeek: 6,
    reminderTime: "07:30",
    createdAt: new Date(Date.now() - 35 * 24 * 60 * 60 * 1000).toISOString(),
    completions: generateQuantitativeCompletions(35, 20, 0.8, 0.4),
    archived: false
  },

  // === 1 –ö–û–õ–ò–ß–ï–°–¢–í–ï–ù–ù–ê–Ø –ü–†–ò–í–´–ß–ö–ê (—á—Ç–µ–Ω–∏–µ) ===
  {
    id: 'demo_reading',
    name: "–ß—Ç–µ–Ω–∏–µ –∫–Ω–∏–≥",
    description: "–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ —á—Ç–µ–Ω–∏–µ –¥–ª—è —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏—è",
    icon: "üìö",
    color: "#4CAF50",
    category: "learning",
    type: "number",
    targetValue: 30,
    unit: "minutes",
    allowOverachievement: true,
    targetDaysPerWeek: 7,
    reminderTime: "21:00",
    createdAt: new Date(Date.now() - 40 * 24 * 60 * 60 * 1000).toISOString(),
    completions: generateQuantitativeCompletions(40, 30, 0.75, 0.5),
    archived: false
  }
];

// === –ì–ï–ù–ï–†–ê–¢–û–† –ü–ï–†–í–û–ì–û –ó–ê–ü–£–°–ö–ê ===
export const generateOnboardingHabits = () => {
  return [
    {
      id: generateSimpleId(),
      name: "–í—ã–ø–∏—Ç—å —Å—Ç–∞–∫–∞–Ω –≤–æ–¥—ã",
      description: "–ü—Ä–æ—Å—Ç–∞—è –ø—Ä–∏–≤—ã—á–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞",
      icon: "üíß",
      color: "#2196F3",
      category: "health",
      type: "boolean",
      targetDaysPerWeek: 7,
      reminderTime: "09:00",
      createdAt: new Date().toISOString(),
      completions: {},
      archived: false
    },
    {
      id: generateSimpleId(),
      name: "10 –æ—Ç–∂–∏–º–∞–Ω–∏–π",
      description: "–£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –º—ã—à—Ü",
      icon: "üí™",
      color: "#FF5722",
      category: "fitness",
      type: "number",
      targetValue: 10,
      unit: "times",
      allowOverachievement: true,
      targetDaysPerWeek: 5,
      reminderTime: "07:30",
      createdAt: new Date().toISOString(),
      completions: {},
      archived: false
    }
  ];
};

export default {
  DEMO_HABITS,
  generateRealisticCompletions,
  generateQuantitativeCompletions,
  generateOnboardingHabits
};